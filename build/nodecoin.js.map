{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 362085b0e74bcebf6339","webpack:///./src/index.js","webpack:///external \"babel-polyfill\"","webpack:///external \"express\"","webpack:///external \"pusher-js\"","webpack:///external \"body-parser\"","webpack:///external \"network\"","webpack:///external \"net\""],"names":["PUSHER_APP_KEY","MAX_PEERS","app","use","json","urlencoded","extended","listen","process","env","PORT","console","log","getIPAddress","ipAddr","pusher","auth","params","ip_addr","port","cluster","authEndpoint","encrypted","channel","subscribe","bind","members","peers","each","id","push","i","Math","min","length","connectWithPeer","tcpServer","createServer","on","handleConnection","address","ip","client","Socket","connect","write","data","conn","remoteAddress","remotePort","setEncoding","Promise","resolve","reject","get_public_ip","err"],"mappings":"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","file":"nodecoin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"events\"] = factory();\n\telse\n\t\troot[\"events\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 362085b0e74bcebf6339","import 'babel-polyfill';\n\nimport Express from 'express';\nimport Pusher from 'pusher-js';\nimport bodyParser from 'body-parser';\nimport net from 'net';\nimport network from 'network';\n\n// variables for Pusher network\nconst PUSHER_APP_KEY = '86e36fb6cb404d67a108'; // connect via public key\nconst MAX_PEERS = 25;\n\n// initialize app server\nconst app = Express();\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\n\napp.listen(process.env.PORT || 3000, async function() {\n  console.log('> App server listening on port ', process.env.PORT);\n  // get public facing IP address\n  const ipAddr = await getIPAddress();\n  // connect to pool of nodes via Pusher\n  const pusher = new Pusher(PUSHER_APP_KEY, {\n    auth: { params: { ip_addr: ipAddr, port: 8334 } },\n    cluster: 'us2',\n    authEndpoint: 'https://pusher-presence-auth.herokuapp.com/pusher/auth', // this can be changed to localhost\n    encrypted: true,\n  });\n\n  // subscribe to channel with other nodes\n  const channel = pusher.subscribe('presence-node-coin');\n  // once our node is connected we can access all of the members\n  channel.bind('pusher:subscription_succeeded', async (members) => {\n    console.log('> pusher:subscription_succeeded: ', members);\n    let peers = [ ];\n    channel.members.each(({ id }) => {\n      if (id !== ipAddr) {\n        peers.push(id);\n      }\n    });\n    // only connect to a max of 25 nodes\n    for (let i = 0; i < Math.min(MAX_PEERS, peers.length); i++) {\n      await connectWithPeer(peers[i], 8334);\n    }\n  });\n\n  // add basic networking\n  const tcpServer = net.createServer();\n  tcpServer.on('connection', handleConnection);\n  tcpServer.listen(8334, '0.0.0.0', () => {\n    console.log('> TCP/IP server listening on ', tcpServer.address());\n  });\n});\n\n// given an IP address, establish a TCP/IP connection with the node\nfunction connectWithPeer(ip, port) {\n  const client = new net.Socket();\n\n  client.connect(port, ip, () => {\n    console.log('> Connected to peer: ', `${ip}:${port}`);\n    // send version number and last block hash to peer\n    client.write(`VERSION 1 00000244a5bae572247ca9f5b9149fc3980fa90a7a70cd35030a29d81ebc88ea`);\n  });\n\n  client.on('data', data => {\n    console.log('> Received data from: ', `${ip}:${port}`, data);\n  });\n}\n\n// when another node connects with our TCP/IP listener, respond accordingly\nfunction handleConnection(conn) {\n  console.log('> New client connection from: ', `${conn.remoteAddress}:${conn.remotePort}`);\n  conn.setEncoding('utf8');\n  conn.on('data', (data) => {\n    console.log('> Received data: ', data);\n  });\n}\n\n// get public facing IP address\nfunction getIPAddress() {\n  return new Promise((resolve, reject) => {\n    network.get_public_ip((err, ip) => {\n      if (err) {\n        reject(err);\n      }\n      resolve(ip);\n    });\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"babel-polyfill\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"babel-polyfill\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"pusher-js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pusher-js\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"network\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"network\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"net\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"net\"\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}